#!/usr/bin/env node

var app = require('../app');
const WebSocket = require('ws');
const https = require('https');

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);


const wss = new WebSocket.Server({ noServer: true });
const server = https.createServer(app);

const clients = new Map();

wss.on('connection', (ws) => {
  console.log('New WebSocket client connected');

  const clientId = Date.now();
  clients.set(clientId, ws);

  ws.on('message', (message) => {
    console.log('Received message:', message);
    const data = JSON.parse(message);

    wss.clients.forEach((client, id) => {
      if (id !== clientId && client.readyState === WebSocket.OPEN) {
        client.send(JSON.stringify(data));
      }
    });
  });

  ws.on('close', () => {
    console.log('WebSocket client disconnected');
    clients.delete(clientId);
  });
});

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

server.listen(port, () => {
  console.log(`Server running on https://localhost:${port}`);
});